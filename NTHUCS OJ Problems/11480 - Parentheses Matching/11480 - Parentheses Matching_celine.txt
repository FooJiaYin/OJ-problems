//3
#include<stdio.h>
#include<string.h>
void forth(int j,int n,int tell[1020]);
void back(int j,int tell[1020]);
char string[1020];
int check=1;
int main()
{
    int j,n,t,i;
    scanf(" %d",&t);
    gets(string);
    for(i=1;i<=t;i++)
    {
        int tell[1020]={0};
        check=1;
        gets(string);
        n=strlen(string);
        for(j=0;j<n&&check==1;j++)
        {
           if(tell[j]!=1&&(string[j]=='{'||string[j]=='('||string[j]=='<'||string[j]=='['))
           forth(j,n,tell);
           else if(tell[j]!=1&&(string[j]=='}'||string[j]==')'||string[j]==']'||string[j]=='>'))
            back(j,tell);
        }
        for(j=0;j<n&&check==1;j++)
        {
            if(tell[j]!=1&&(string[j]=='{'||string[j]=='('||string[j]=='<'||string[j]=='['))
                {
                    check=0;
                    break;
                }
        }
        if(check==1)printf("Case %d: Yes\n",i);
        else printf("Case %d: No\n",i);
    }
    return 0;
}

void forth(int j,int n,int tell[1020])
{
    int k;
    if(j>=n)
    {
        check=0;
        return ;
    }
    if(string[j]=='{')
    {
        if(string[j+1]!='}')
            {
               forth(j+1,n,tell);
                   for(k=j+1;tell[k]==1;k++);//ignore those already matched parentheses
                   if(string[k]=='}'&&k<n)
                   {
                       check=1;
                       tell[j]=1,tell[k]=1;
                   }
                   else return;//maybe other kind of pairs are included ex:[[]<>],check again in void back(int j,int tell[1020])
            }
            else
            {
                check=1;
                tell[j]=1,tell[j+1]=1;
            }
    }
    else if(string[j]=='[')
    {
        if(string[j+1]!=']')
            {
               forth(j+1,n,tell);
                   for(k=j+1;tell[k]==1;k++);
                   if(string[k]==']')
                   {
                       tell[j]=1,tell[k]=1;
                   }
                   else return ;
            }
            else
            {
                tell[j]=1,tell[j+1]=1;
            }
    }
    else if(string[j]=='(')
    {
        if(string[j+1]!=')')
            {
                forth(j+1,n,tell);
                for(k=j+1;tell[k]==1;k++);
                   if(string[k]==')')
                   {
                       tell[j]=1,tell[k]=1;
                   }
                   else return ;
            }
            else
            {
                tell[j]=1,tell[j+1]=1;
            }
    }
    else if(string[j]=='<')
    {
        if(string[j+1]!='>')
            {
               forth(j+1,n,tell);
                for(k=j+1;tell[k]==1;k++);
                   if(string[k]=='>')
                   {
                       tell[j]=1,tell[k]=1;
                   }
                   else return ;
            }
            else
            {
                tell[j]=1,tell[j+1]=1;
            }
    }
}

void back(int j,int tell[1020])
{
    int k;
    if(j<0)
    {
        check=0;
        return ;
    }
    if(string[j]=='}')
    {
        for(k=j-1;k>=0&&tell[k]==1;k--);//ignore those already matched pairs
        if(!(k>=0&&string[k]=='{'))check=0;
        else
        {
            tell[k]=1,tell[j]=1;
        }
    }
    else if(string[j]==']')
    {
        for(k=j-1;k>=0&&tell[k]==1;k--);
        if(k>=0&&string[k]=='[')
        {
            tell[j]=1,tell[k]=1;
        }
        else check=0;
    }
    else if(string[j]==')')
    {
        for(k=j-1;k>=0&&tell[k]==1;k--);
        if(!(k>=0&&string[k]=='('))check=0;
        else
        {
            tell[k]=1,tell[j]=1;
        }
    }
    else if(string[j]=='>')
    {
        for(k=j-1;k>=0&&tell[k]==1;k--);
        if(!(k>=0&&string[k]=='<'))check=0;
        else
        {
            tell[k]=1,tell[j]=1;
        }
    }
}
